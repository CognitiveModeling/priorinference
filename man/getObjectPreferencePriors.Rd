% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllUtterancesAndObjects.R
\name{getObjectPreferencePriors}
\alias{getObjectPreferencePriors}
\title{Get priors of object preferences of the listener}
\usage{
getObjectPreferencePriors(validUtterances, currentObjects, type, uttToObjProbs)
}
\arguments{
\item{validUtterances}{A vector of utterances that correspond to all feature values present
in the current objects in the scene.

For example, it only makes sense to utter \emph{"red"} in a scene if there are \emph{red} objects present.}

\item{currentObjects}{A vector of three values in range \code{{1,...,27}} specifying the target and the other two objectsin the scene.

The target is the first object in the vector \code{(index = 1)}.}

\item{type}{Is set to \code{0:} Hard priors or \code{ >0:} Soft priors with specified softness}

\item{uttToObjProbs}{A matrix. The rows map each possible utterance that corresponds to each present feature value
of the current objects. The columns represent the three objects in the scene.

This reflects the obedience-parameter and which objects match the respective utterance.
The matrix shows the probability that a certain object is chosen following a certain utterance,
that is valid in the scene.
The number of rows of the matrix match the length of the validUtterances vector.}
}
\value{
A list of preference priors for all valid utterances based on the objects in the scene.

The list has as many rows as the length of the validUtterances vector + 1.

Each row in the list contains a vector of length 3, as there are three objects in the scene.

The extra row is for the case of no preferences whatsoever, i.e. uniform prior over all three objects in the scene.
}
\description{
Determine the priors of object preferences of the listener.

These are automatically derived from the valid utterances in the scene
(i.e. derived from all features of the current objects).
}
\details{
This function is only used in X9
}
\examples{
\donttest{getObjectPreferencePriors(validUtterances, currentObjects, type, uttToObjProbs)}

output:
[[1]]
[1] 0.85 0.077 0.077

[[2]]
[1] 0.077 0.85 0.077

[[3]]
[1] 0.077 0.077 0.85

[[4]]
[1] 0.33 0.33 0.33

[[5]]
[1] 0.33 0.33 0.33

[[6]]
[1] 0.33 0.33 0.33


Example:

To see which objects are present in the scene run:
\donttest{allObjects[currentObjects,]}

output:

      shape   pattern  color
[1,] "cloud"  "solid" "blue"
[2,] "circle" "solid" "blue"
[3,] "square" "solid" "blue"

The validUtterances vector: [1] 1 2 3 4 7

The rows of the list 1-6 refer to the valid utterances in the scene.

Example: 

If we take a look at row 4 of the list:
[[4]]
[1] 0.33 0.33 0.33
We can see that the preference prior of the listener is 1/3 for
each of the objects, if the utterance is "solid".
The last row (6) in the list contains a uniform prior over the present
objects in the scene.

}
